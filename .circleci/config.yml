version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.2.0
  aws-ecs: circleci/aws-ecs@1.2.0

jobs:
  build:
    machine:
      image: ubuntu-2004:2022.10.1
    steps:
      - checkout
      - run:
          name: docker-compose build
          command: docker-compose build
  test:
    machine:
      image: ubuntu-2004:2022.10.1
    steps:
      - checkout
      - run:
          name: docker-compose up -d
          command: docker-compose up -d
      - run:
          name: docker-compose run api rails db:create RAILS_ENV=test
          command: docker-compose run api rails db:create RAILS_ENV=test
      - run:
          name: docker-compose run api rails db:migrate RAILS_ENV=test
          command: docker-compose run api rails db:migrate RAILS_ENV=test
      # api側テスト
      - run:
          name: docker-compose run api rspec
          command: docker-compose run api rspec
      - run:
          name: docker-compose run front yarn install
          command: docker-compose run front yarn install
      # front側テスト
      - run:
          name: docker-compose run front yarn test
          command: docker-compose run front yarn test
      - run:
          name: docker-compose down
          command: docker-compose down

workflows:
  build_and_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - aws-ecr/build-and-push-image:
            name:                         'build-and-push-api'
            account-url:                  ${AWS_ECR_ACCOUNT_URL}
            region:                       ${AWS_REGION}
            repo:                         ${REPO_NAME_API}
            tag:                          "${CIRCLE_SHA1}"
            path:                         './api'
            dockerfile:                   api/Dockerfile.prod
            extra-build-args:             '--build-arg RAILS_MASTER_KEY=$RAILS_MASTER_KEY'
            requires:
              - test
            filters:
              branches:
                only:
                  - main
      - aws-ecr/build-and-push-image:
            name:                         'build-and-push-front'
            account-url:                  ${AWS_ECR_ACCOUNT_URL}
            region:                       ${AWS_REGION}
            repo:                         ${REPO_NAME_FRONT}
            tag:                          "${CIRCLE_SHA1}"
            path:                         './front'
            dockerfile:                   front/Dockerfile.prod
            extra-build-args:             '--build-arg API_KEY=$API_KEY'
            requires:
              - test
            filters:
              branches:
                only:
                  - main
      # - aws-ecs/deploy-service-update:
      #       family:                       ${FAMILY_NAME_API}
      #       service-name:                 ${SERVICE_NAME_API}
      #       cluster-name:                 ${CLUSTER_NAME}
      #       #"container="はTask Definitionで設定したコンテナ名になるので、注意してください。
      #       container-image-name-updates: 'container=${AWS_RESOURCE_NAME_PREFIX}-api,image-and-tag=${AWS_ECR_ACCOUNT_URL}/${REPO_NAME_API}:${CIRCLE_SHA1}'
      #       requires:
      #         - build-and-push-api
      #       filters:
      #         branches:
      #           only:
      #             - main
      # - aws-ecs/deploy-service-update:
      #       family:                       ${FAMILY_NAME_FRONT}
      #       service-name:                 ${SERVICE_NAME_FRONT}
      #       cluster-name:                 ${CLUSTER_NAME}
      #       #"container="はTask Definitionで設定したコンテナ名になるので、注意してください。
      #       container-image-name-updates: 'container=${AWS_RESOURCE_NAME_PREFIX}-front,image-and-tag=${AWS_ECR_ACCOUNT_URL}/${REPO_NAME_FRONT}:${CIRCLE_SHA1}'
      #       requires:
      #         - build-and-push-front
      #       filters:
      #         branches:
      #           only:
      #             - main
